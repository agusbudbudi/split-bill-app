// // let quill;
// let currentInvoice;

// document.addEventListener("DOMContentLoaded", () => {
//   const selectedInvoiceNo = sessionStorage.getItem("selectedInvoiceNo");
//   if (!selectedInvoiceNo) {
//     alert("Invoice tidak ditemukan");
//     return;
//   }

//   const invoiceHistory = JSON.parse(
//     localStorage.getItem("invoiceHistory") || "[]"
//   );
//   const invoiceData = invoiceHistory.find(
//     (inv) => inv.invoiceNo === selectedInvoiceNo
//   );

//   if (!invoiceData) {
//     alert("Invoice tidak ditemukan dalam history");
//     return;
//   }

//   // Simpan ke localStorage untuk akses global
//   currentInvoice = invoiceData;
//   localStorage.setItem("currentInvoice", JSON.stringify(invoiceData));

//   // Inisialisasi Quill (jika ada)
//   const tncField = document.getElementById("tncField");
//   if (tncField) {
//     quill = new Quill("#tncField", {
//       theme: "snow",
//       placeholder: "Add TnC",
//       modules: {
//         toolbar: [
//           ["bold", "italic", "underline"],
//           ["link", "blockquote"],
//           [{ list: "ordered" }, { list: "bullet" }],
//         ],
//       },
//     });

//     // Prefill TnC jika ada
//     if (invoiceData.tnc) {
//       quill.root.innerHTML = invoiceData.tnc;
//     }
//   }

//   // Render invoice
//   renderInvoiceDetails(invoiceData);
// });

// window.addEventListener("DOMContentLoaded", () => {
//   const selectedInvoiceNo = sessionStorage.getItem("selectedInvoiceNo");
//   if (!selectedInvoiceNo) return;

//   const history = JSON.parse(localStorage.getItem("invoiceHistory") || "[]");
//   const invoice = history.find((inv) => inv.invoiceNo === selectedInvoiceNo);

//   if (invoice) {
//     renderInvoiceDetails(invoice);
//   }
// });

// //Prefil Data
// window.addEventListener("DOMContentLoaded", () => {
//   const selectedInvoiceNo = sessionStorage.getItem("selectedInvoiceNo");
//   if (!selectedInvoiceNo) return;

//   const invoiceHistory = JSON.parse(
//     localStorage.getItem("invoiceHistory") || "[]"
//   );

//   const invoiceData = invoiceHistory.find(
//     (inv) => inv.invoiceNo === selectedInvoiceNo
//   );

//   if (invoiceData) {
//     renderInvoiceDetails(invoiceData);
//   }
// });

// function renderInvoiceDetails(data) {
//   // Isi info dasar
//   document.getElementById("preview-invoice-number").textContent =
//     data.invoiceNo;
//   document.getElementById("preview-invoice-date").textContent =
//     data.invoiceDate;
//   document.getElementById("preview-due-date").textContent = data.dueDate;
//   document.getElementById("preview-subtotal").textContent = formatCurrency(
//     data.subtotal || 0
//   );
//   document.getElementById(
//     "preview-discountInfo"
//   ).textContent = `- ${formatCurrency(data.discountInfo || 0)}`;
//   document.getElementById("preview-total").textContent = formatCurrency(
//     data.total || 0
//   );

//   document.getElementById("preview-total-words").textContent =
//     data.totalWords || "";

//   // Billed By
//   if (data.billedBy) {
//     document.getElementById("invoice-billed-by").innerHTML = `
//         <img src="${data.billedBy.logo}" class="billed-logo-preview">
//         <p><strong>${data.billedBy.name}</strong></p>
//         ${data.billedBy.address ? `<p>${data.billedBy.address}</p>` : ""}
//         ${data.billedBy.email ? `<p>${data.billedBy.email}</p>` : ""}
//         ${data.billedBy.phone ? `<p>${data.billedBy.phone}</p>` : ""}
//       `;
//   }

//   // Billed To
//   if (data.billedTo) {
//     document.getElementById("invoice-billed-to").innerHTML = `
//         <img src="${data.billedTo.logo}" class="billed-logo-preview">
//         <p><strong>${data.billedTo.name}</strong></p>
//         ${data.billedTo.address ? `<p>${data.billedTo.address}</p>` : ""}
//         ${data.billedTo.email ? `<p>${data.billedTo.email}</p>` : ""}
//         ${data.billedTo.phone ? `<p>${data.billedTo.phone}</p>` : ""}
//       `;
//   }

//   // Items
//   const itemList = data.items || [];
//   const tbody = document.getElementById("preview-items");
//   tbody.innerHTML = "";
//   itemList.forEach((item) => {
//     const row = document.createElement("tr");
//     row.innerHTML = `
//         <td>
//         <div class="item-name">${item.name}</div>
//         <div class="item-desc">${item.desc || ""}</div>
//         </td>
//         <td>${item.qty}</td>
//         <td>${formatCurrency(item.rate)}</td>
//         <td>${formatCurrency(item.amount)}</td>
//       `;
//     tbody.appendChild(row);
//   });

//   // // Payment Methods
//   // const paymentContainer = document.getElementById("selectedPaymentInfo");
//   // paymentContainer.innerHTML = "<h3>Metode Pembayaran</h3>";

//   // if (data.paymentMethods && data.paymentMethods.length > 0) {
//   //   data.paymentMethods.forEach((method) => {
//   //     const paymentDiv = document.createElement("div");
//   //     paymentDiv.classList.add("selected-payment-summary");

//   //     paymentDiv.innerHTML = `
//   //         <img src="${method.logo}" alt="${method.name}" class="payment-logo">
//   //         <p><strong>${method.name}</strong></p>
//   //         <p>No HP: ${method.phone}</p>
//   //       `;

//   //     paymentContainer.appendChild(paymentDiv);
//   //   });
//   // }

//   // Payment Methods
//   const paymentContainer = document.getElementById("selectedPaymentInfo");
//   paymentContainer.innerHTML = "<h3>Metode Pembayaran</h3>";

//   if (data.paymentMethods && data.paymentMethods.length > 0) {
//     data.paymentMethods.forEach((method) => {
//       const paymentDiv = document.createElement("div");
//       paymentDiv.classList.add("selected-payment-summary");

//       // Tentukan detail isi berdasarkan data yang tersedia
//       let detailHTML = "";
//       if (method.phone) {
//         detailHTML = `<p>No HP: ${method.phone}</p>`;
//       } else if (method.accountNumber || method.bankName) {
//         detailHTML = `
//         <p>
//           ${method.accountNumber ? `Rek: ${method.accountNumber}<br>` : ""}
//           ${method.bankName ? `Bank: ${method.bankName}` : ""}
//         </p>
//       `;
//       }

//       paymentDiv.innerHTML = `
//       <img src="${method.logo}" alt="${method.name}" class="payment-logo">
//       <p><strong>${method.name}</strong></p>
//       ${detailHTML}
//     `;

//       paymentContainer.appendChild(paymentDiv);
//     });
//   }

//   // TnC & Footer
//   document.getElementById("preview-tnc").innerHTML = data.tnc || "";
//   document.getElementById("preview-footer").innerHTML = data.footer || "";
// }

// function formatCurrency(value) {
//   return new Intl.NumberFormat("id-ID", {
//     style: "currency",
//     currency: "IDR",
//   }).format(value);
// }

// //Submit Edited Section
// function submitEditSection(invoiceNo, sectionKey, inputId, directValue = null) {
//   let newValue = directValue;

//   if (!directValue && inputId) {
//     const inputEl = document.getElementById(inputId);
//     if (!inputEl) return console.error("Input element not found:", inputId);
//     newValue = inputEl.value;
//   }

//   editInvoice(invoiceNo, sectionKey, newValue);
// }

// //Edit Invoice fungsi
// function editInvoice(invoiceNo, sectionKey, newData) {
//   const invoiceHistory =
//     JSON.parse(localStorage.getItem("invoiceHistory")) || [];

//   const index = invoiceHistory.findIndex((inv) => inv.invoiceNo === invoiceNo);
//   if (index === -1) {
//     console.error("Invoice not found:", invoiceNo);
//     return;
//   }

//   invoiceHistory[index][sectionKey] = newData;
//   localStorage.setItem("invoiceHistory", JSON.stringify(invoiceHistory));

//   // Update currentInvoice juga
//   const updatedInvoice = invoiceHistory[index];
//   localStorage.setItem("currentInvoice", JSON.stringify(updatedInvoice));

//   // Refresh tampilan
//   renderInvoiceDetails(updatedInvoice);

//   // Tutup bottom sheet
//   closeBottomSheet();
// }

// function submitInvoiceFooter() {
//   const currentInvoice = JSON.parse(localStorage.getItem("currentInvoice"));
//   if (!currentInvoice) return;

//   // Simpan footer dari input
//   submitEditSection(currentInvoice.invoiceNo, "footer", "editFooterInput");

//   // Simpan TnC dari Quill (jika tersedia)
//   if (quill) {
//     const tncHTML = quill.root.innerHTML;
//     submitEditSection(currentInvoice.invoiceNo, "tnc", null, tncHTML);
//   }
// }

// // let quill;
// // let currentInvoice;

// // document.addEventListener("DOMContentLoaded", () => {
// //   const selectedInvoiceNo = sessionStorage.getItem("selectedInvoiceNo");
// //   if (!selectedInvoiceNo) {
// //     alert("Invoice tidak ditemukan");
// //     return;
// //   }

// //   const invoiceHistory = JSON.parse(
// //     localStorage.getItem("invoiceHistory") || "[]"
// //   );
// //   const invoiceData = invoiceHistory.find(
// //     (inv) => inv.invoiceNo === selectedInvoiceNo
// //   );

// //   if (!invoiceData) {
// //     alert("Invoice tidak ditemukan dalam history");
// //     return;
// //   }

// //   // Simpan ke localStorage untuk akses global
// //   currentInvoice = invoiceData;
// //   localStorage.setItem("currentInvoice", JSON.stringify(invoiceData));

// //   // Inisialisasi Quill (jika ada)
// //   const tncField = document.getElementById("tncField");
// //   if (tncField) {
// //     quill = new Quill("#tncField", {
// //       theme: "snow",
// //       placeholder: "Add TnC",
// //       modules: {
// //         toolbar: [
// //           ["bold", "italic", "underline"],
// //           ["link", "blockquote"],
// //           [{ list: "ordered" }, { list: "bullet" }],
// //         ],
// //       },
// //     });

// //     // Prefill TnC jika ada
// //     if (invoiceData.tnc) {
// //       quill.root.innerHTML = invoiceData.tnc;
// //     }
// //   }

// //   // Render invoice
// //   renderInvoiceDetails(invoiceData);
// // });

// // function renderInvoiceDetails(data) {
// //   document.getElementById("preview-invoice-number").textContent =
// //     data.invoiceNo;
// //   document.getElementById("preview-invoice-date").textContent =
// //     data.invoiceDate;
// //   document.getElementById("preview-due-date").textContent = data.dueDate;
// //   document.getElementById("preview-subtotal").textContent = formatCurrency(
// //     data.subtotal || 0
// //   );
// //   document.getElementById(
// //     "preview-discountInfo"
// //   ).textContent = `- ${formatCurrency(data.discountInfo || 0)}`;
// //   document.getElementById("preview-total").textContent = formatCurrency(
// //     data.total || 0
// //   );
// //   document.getElementById("preview-total-words").textContent =
// //     data.totalWords || "";

// //   if (data.billedBy) {
// //     document.getElementById("invoice-billed-by").innerHTML = `
// //       <img src="${data.billedBy.logo}" class="billed-logo-preview">
// //       <p><strong>${data.billedBy.name}</strong></p>
// //       ${data.billedBy.address ? `<p>${data.billedBy.address}</p>` : ""}
// //       ${data.billedBy.email ? `<p>${data.billedBy.email}</p>` : ""}
// //       ${data.billedBy.phone ? `<p>${data.billedBy.phone}</p>` : ""}
// //     `;
// //   }

// //   if (data.billedTo) {
// //     document.getElementById("invoice-billed-to").innerHTML = `
// //       <img src="${data.billedTo.logo}" class="billed-logo-preview">
// //       <p><strong>${data.billedTo.name}</strong></p>
// //       ${data.billedTo.address ? `<p>${data.billedTo.address}</p>` : ""}
// //       ${data.billedTo.email ? `<p>${data.billedTo.email}</p>` : ""}
// //       ${data.billedTo.phone ? `<p>${data.billedTo.phone}</p>` : ""}
// //     `;
// //   }

// //   const itemList = data.items || [];
// //   const tbody = document.getElementById("preview-items");
// //   tbody.innerHTML = "";
// //   itemList.forEach((item) => {
// //     const row = document.createElement("tr");
// //     row.innerHTML = `
// //       <td>
// //         <div class="item-name">${item.name}</div>
// //         <div class="item-desc">${item.desc || ""}</div>
// //       </td>
// //       <td>${item.qty}</td>
// //       <td>${formatCurrency(item.rate)}</td>
// //       <td>${formatCurrency(item.amount)}</td>
// //     `;
// //     tbody.appendChild(row);
// //   });

// //   const paymentContainer = document.getElementById("selectedPaymentInfo");
// //   paymentContainer.innerHTML = "<h3>Metode Pembayaran</h3>";

// //   if (data.paymentMethods && data.paymentMethods.length > 0) {
// //     data.paymentMethods.forEach((method) => {
// //       const paymentDiv = document.createElement("div");
// //       paymentDiv.classList.add("selected-payment-summary");

// //       let detailHTML = "";
// //       if (method.phone) {
// //         detailHTML = `<p>No HP: ${method.phone}</p>`;
// //       } else if (method.accountNumber || method.bankName) {
// //         detailHTML = `
// //           <p>
// //             ${method.accountNumber ? `Rek: ${method.accountNumber}<br>` : ""}
// //             ${method.bankName ? `Bank: ${method.bankName}` : ""}
// //           </p>
// //         `;
// //       }

// //       paymentDiv.innerHTML = `
// //         <img src="${method.logo}" alt="${method.name}" class="payment-logo">
// //         <p><strong>${method.name}</strong></p>
// //         ${detailHTML}
// //       `;

// //       paymentContainer.appendChild(paymentDiv);
// //     });
// //   }

// //   document.getElementById("preview-tnc").innerHTML = data.tnc || "";
// //   document.getElementById("preview-footer").innerHTML = data.footer || "";
// // }

// // function formatCurrency(value) {
// //   return new Intl.NumberFormat("id-ID", {
// //     style: "currency",
// //     currency: "IDR",
// //   }).format(value);
// // }

// // function submitEditSection(invoiceNo, sectionKey, inputId, directValue = null) {
// //   let newValue = directValue;

// //   if (!directValue && inputId) {
// //     const inputEl = document.getElementById(inputId);
// //     if (!inputEl) return console.error("Input element not found:", inputId);
// //     newValue = inputEl.value;
// //   }

// //   editInvoice(invoiceNo, sectionKey, newValue);
// // }

// // function editInvoice(invoiceNo, sectionKey, newData) {
// //   const invoiceHistory =
// //     JSON.parse(localStorage.getItem("invoiceHistory")) || [];

// //   const index = invoiceHistory.findIndex((inv) => inv.invoiceNo === invoiceNo);
// //   if (index === -1) {
// //     console.error("Invoice not found:", invoiceNo);
// //     return;
// //   }

// //   invoiceHistory[index][sectionKey] = newData;
// //   localStorage.setItem("invoiceHistory", JSON.stringify(invoiceHistory));

// //   const updatedInvoice = invoiceHistory[index];
// //   localStorage.setItem("currentInvoice", JSON.stringify(updatedInvoice));

// //   renderInvoiceDetails(updatedInvoice);
// //   closeBottomSheet();
// // }

// // function submitInvoiceFooter() {
// //   const currentInvoice = JSON.parse(localStorage.getItem("currentInvoice"));
// //   if (!currentInvoice) return;

// //   submitEditSection(currentInvoice.invoiceNo, "footer", "editFooterInput");

// //   if (quill) {
// //     const tncHTML = quill.root.innerHTML;
// //     submitEditSection(currentInvoice.invoiceNo, "tnc", null, tncHTML);
// //   }
// // }

// let quill;
let currentInvoice;

document.addEventListener("DOMContentLoaded", () => {
  console.log("DOM Content Loaded"); // Debug log

  const selectedInvoiceNo = sessionStorage.getItem("selectedInvoiceNo");
  if (!selectedInvoiceNo) {
    alert("Invoice tidak ditemukan");
    return;
  }

  const invoiceHistory = JSON.parse(
    localStorage.getItem("invoiceHistory") || "[]"
  );
  const invoiceData = invoiceHistory.find(
    (inv) => inv.invoiceNo === selectedInvoiceNo
  );

  if (!invoiceData) {
    alert("Invoice tidak ditemukan dalam history");
    return;
  }

  // Simpan ke localStorage untuk akses global
  currentInvoice = invoiceData;
  localStorage.setItem("currentInvoice", JSON.stringify(invoiceData));

  // Render invoice TERLEBIH DAHULU sebelum inisialisasi Quill
  renderInvoiceDetails(invoiceData);

  // Inisialisasi Quill dengan delay dan error handling
  setTimeout(() => {
    initializeQuill(invoiceData);
  }, 100); // Delay 100ms untuk memastikan DOM sudah ready
});

function initializeQuill(invoiceData) {
  const tncField = document.getElementById("tncField");

  if (!tncField) {
    console.warn("TnC field not found, skipping Quill initialization");
    return;
  }

  // Cek apakah Quill library sudah ter-load
  if (typeof Quill === "undefined") {
    console.error("Quill library is not loaded");
    return;
  }

  try {
    quill = new Quill("#tncField", {
      theme: "snow",
      placeholder: "Add TnC",
      modules: {
        toolbar: [
          ["bold", "italic", "underline"],
          ["link", "blockquote"],
          [{ list: "ordered" }, { list: "bullet" }],
        ],
      },
    });

    // Prefill TnC jika ada
    if (invoiceData.tnc) {
      quill.root.innerHTML = invoiceData.tnc;
    }

    console.log("Quill initialized successfully"); // Debug log
  } catch (error) {
    console.error("Error initializing Quill:", error);
  }
}

function renderInvoiceDetails(data) {
  console.log("Rendering invoice details:", data); // Debug log

  try {
    // Cek apakah element-element DOM ada
    const elements = [
      "preview-invoice-number",
      "preview-invoice-date",
      "preview-due-date",
      "preview-subtotal",
      "preview-discountInfo",
      "preview-total",
      "preview-total-words",
    ];

    // Validasi semua element ada sebelum render
    for (const elementId of elements) {
      if (!document.getElementById(elementId)) {
        console.error(`Element with ID '${elementId}' not found`);
        return;
      }
    }

    document.getElementById("preview-invoice-number").textContent =
      data.invoiceNo || "";
    document.getElementById("preview-invoice-date").textContent =
      data.invoiceDate || "";
    document.getElementById("preview-due-date").textContent =
      data.dueDate || "";
    document.getElementById("preview-subtotal").textContent = formatCurrency(
      data.subtotal || 0
    );
    document.getElementById(
      "preview-discountInfo"
    ).textContent = `- ${formatCurrency(data.discountInfo || 0)}`;
    document.getElementById("preview-total").textContent = formatCurrency(
      data.total || 0
    );
    document.getElementById("preview-total-words").textContent =
      data.totalWords || "";

    // Render billed by section
    renderBilledSection(data);

    // Render items
    renderItems(data.items || []);

    // Render payment methods
    renderPaymentMethods(data.paymentMethods || []);

    // Render TnC and footer
    renderTncAndFooter(data);

    console.log("Invoice details rendered successfully");
  } catch (error) {
    console.error("Error rendering invoice details:", error);
  }
}

function renderBilledSection(data) {
  const billedByElement = document.getElementById("invoice-billed-by");
  const billedToElement = document.getElementById("invoice-billed-to");

  if (data.billedBy && billedByElement) {
    billedByElement.innerHTML = `
      ${
        data.billedBy.logo
          ? `<img src="${data.billedBy.logo}" class="billed-logo-preview">`
          : ""
      }
      <p><strong>${data.billedBy.name || ""}</strong></p>
      ${data.billedBy.address ? `<p>${data.billedBy.address}</p>` : ""}
      ${data.billedBy.email ? `<p>${data.billedBy.email}</p>` : ""}
      ${data.billedBy.phone ? `<p>${data.billedBy.phone}</p>` : ""}
    `;
  }

  if (data.billedTo && billedToElement) {
    billedToElement.innerHTML = `
      ${
        data.billedTo.logo
          ? `<img src="${data.billedTo.logo}" class="billed-logo-preview">`
          : ""
      }
      <p><strong>${data.billedTo.name || ""}</strong></p>
      ${data.billedTo.address ? `<p>${data.billedTo.address}</p>` : ""}
      ${data.billedTo.email ? `<p>${data.billedTo.email}</p>` : ""}
      ${data.billedTo.phone ? `<p>${data.billedTo.phone}</p>` : ""}
    `;
  }
}

function renderItems(itemList) {
  const tbody = document.getElementById("preview-items");
  if (!tbody) {
    console.error("Preview items table body not found");
    return;
  }

  tbody.innerHTML = "";
  itemList.forEach((item) => {
    const row = document.createElement("tr");
    row.innerHTML = `
      <td>
        <div class="item-name">${item.name || ""}</div>
        <div class="item-desc">${item.desc || ""}</div>
      </td>
      <td>${item.qty || 0}</td>
      <td>${formatCurrency(item.rate || 0)}</td>
      <td>${formatCurrency(item.amount || 0)}</td>
    `;
    tbody.appendChild(row);
  });
}

function renderPaymentMethods(paymentMethods) {
  const paymentContainer = document.getElementById("selectedPaymentInfo");
  if (!paymentContainer) {
    console.error("Payment container not found");
    return;
  }

  paymentContainer.innerHTML = "<h3>Metode Pembayaran</h3>";

  if (paymentMethods.length > 0) {
    paymentMethods.forEach((method) => {
      const paymentDiv = document.createElement("div");
      paymentDiv.classList.add("selected-payment-summary");

      let detailHTML = "";
      if (method.phone) {
        detailHTML = `<p>No HP: ${method.phone}</p>`;
      } else if (method.accountNumber || method.bankName) {
        detailHTML = `
          <p>
            ${method.accountNumber ? `Rek: ${method.accountNumber}<br>` : ""}
            ${method.bankName ? `Bank: ${method.bankName}` : ""}
          </p>
        `;
      }

      paymentDiv.innerHTML = `
        ${
          method.logo
            ? `<img src="${method.logo}" alt="${method.name}" class="payment-logo">`
            : ""
        }
        <p><strong>${method.name || ""}</strong></p>
        ${detailHTML}
      `;

      paymentContainer.appendChild(paymentDiv);
    });
  }
}

function renderTncAndFooter(data) {
  const tncElement = document.getElementById("preview-tnc");
  const footerElement = document.getElementById("preview-footer");

  if (tncElement) {
    tncElement.innerHTML = data.tnc || "";
  }

  if (footerElement) {
    footerElement.innerHTML = data.footer || "";
  }
}

function formatCurrency(value) {
  try {
    return new Intl.NumberFormat("id-ID", {
      style: "currency",
      currency: "IDR",
    }).format(value || 0);
  } catch (error) {
    console.error("Error formatting currency:", error);
    return "Rp 0";
  }
}

function submitEditSection(invoiceNo, sectionKey, inputId, directValue = null) {
  let newValue = directValue;

  if (!directValue && inputId) {
    const inputEl = document.getElementById(inputId);
    if (!inputEl) {
      console.error("Input element not found:", inputId);
      return;
    }
    newValue = inputEl.value;
  }

  editInvoice(invoiceNo, sectionKey, newValue);
}

function editInvoice(invoiceNo, sectionKey, newData) {
  try {
    const invoiceHistory =
      JSON.parse(localStorage.getItem("invoiceHistory")) || [];

    const index = invoiceHistory.findIndex(
      (inv) => inv.invoiceNo === invoiceNo
    );
    if (index === -1) {
      console.error("Invoice not found:", invoiceNo);
      return;
    }

    invoiceHistory[index][sectionKey] = newData;
    localStorage.setItem("invoiceHistory", JSON.stringify(invoiceHistory));

    const updatedInvoice = invoiceHistory[index];
    localStorage.setItem("currentInvoice", JSON.stringify(updatedInvoice));

    renderInvoiceDetails(updatedInvoice);

    // Check if closeBottomSheet function exists
    if (typeof closeBottomSheet === "function") {
      closeBottomSheet();
    }
  } catch (error) {
    console.error("Error editing invoice:", error);
  }
}

function submitInvoiceFooter() {
  try {
    const currentInvoice = JSON.parse(localStorage.getItem("currentInvoice"));
    if (!currentInvoice) {
      console.error("Current invoice not found");
      return;
    }

    submitEditSection(currentInvoice.invoiceNo, "footer", "editFooterInput");

    if (quill) {
      const tncHTML = quill.root.innerHTML;
      submitEditSection(currentInvoice.invoiceNo, "tnc", null, tncHTML);
    }
  } catch (error) {
    console.error("Error submitting invoice footer:", error);
  }
}
